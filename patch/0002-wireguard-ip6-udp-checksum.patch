diff --git a/src/plugins/wireguard/wireguard_output_tun.c b/src/plugins/wireguard/wireguard_output_tun.c
index 635f5dc28..f1e2362ae 100644
--- a/src/plugins/wireguard/wireguard_output_tun.c
+++ b/src/plugins/wireguard/wireguard_output_tun.c
@@ -504,6 +504,12 @@ wg_output_tun_inline (vlib_main_t *vm, vlib_node_runtime_t *node,
 				  sizeof (udp_header_t));
 	  b[0]->current_length =
 	    (encrypted_packet_len + sizeof (ip6_udp_header_t));
+
+    /* IPv6 UDP checksum is mandatory */
+    int bogus = 0;
+    ip6_header_t *ip6_0 = &(hdr6_out->ip6);
+	  hdr6_out->udp.checksum = ip6_tcp_udp_icmp_compute_checksum (vm, b[0], ip6_0, &bogus);
+	  ASSERT (bogus == 0);
 	}
 
     out:
diff --git a/src/plugins/wireguard/wireguard_send.c b/src/plugins/wireguard/wireguard_send.c
index 5366cd91c..805067fb0 100644
--- a/src/plugins/wireguard/wireguard_send.c
+++ b/src/plugins/wireguard/wireguard_send.c
@@ -41,7 +41,7 @@ ip46_enqueue_packet (vlib_main_t *vm, u32 bi0, int is_ip4)
 }
 
 static void
-wg_buffer_prepend_rewrite (vlib_buffer_t *b0, const wg_peer_t *peer, u8 is_ip4)
+wg_buffer_prepend_rewrite (vlib_main_t *vm, vlib_buffer_t *b0, const wg_peer_t *peer, u8 is_ip4)
 {
   if (is_ip4)
     {
@@ -72,6 +72,12 @@ wg_buffer_prepend_rewrite (vlib_buffer_t *b0, const wg_peer_t *peer, u8 is_ip4)
 
       hdr6->ip6.payload_length = hdr6->udp.length =
 	clib_host_to_net_u16 (b0->current_length - sizeof (ip6_header_t));
+
+      /* IPv6 UDP checksum is mandatory */
+      int bogus = 0;
+      ip6_header_t *ip6_0 = &(hdr6->ip6);
+	    hdr6->udp.checksum = ip6_tcp_udp_icmp_compute_checksum (vm, b0, ip6_0, &bogus);
+	    ASSERT (bogus == 0);
     }
 }
 
@@ -93,7 +99,7 @@ wg_create_buffer (vlib_main_t *vm, const wg_peer_t *peer, const u8 *packet,
 
   b0->current_length = packet_len;
 
-  wg_buffer_prepend_rewrite (b0, peer, is_ip4);
+  wg_buffer_prepend_rewrite(vm, b0, peer, is_ip4);
 
   return true;
 }
