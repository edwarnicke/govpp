From 746d9a3afd8d8c98e254d19c553c02a05328522a Mon Sep 17 00:00:00 2001
From: Artem Glazychev <artem.glazychev@xored.com>
Date: Sun, 23 Oct 2022 16:02:07 +0700
Subject: [PATCH] wireguard ip6 udp checksum

Signed-off-by: Artem Glazychev <artem.glazychev@xored.com>
Change-Id: I91944e388fb86825be4bea3036f3d4c06960c2a9
---
 src/plugins/wireguard/wireguard_output_tun.c | 22 +++++++++++++++++++-
 src/plugins/wireguard/wireguard_send.c       | 12 +++++++++--
 2 files changed, 31 insertions(+), 3 deletions(-)

diff --git a/src/plugins/wireguard/wireguard_output_tun.c b/src/plugins/wireguard/wireguard_output_tun.c
index 635f5dc28..bad682457 100644
--- a/src/plugins/wireguard/wireguard_output_tun.c
+++ b/src/plugins/wireguard/wireguard_output_tun.c
@@ -550,6 +550,27 @@ wg_output_tun_inline (vlib_main_t *vm, vlib_node_runtime_t *node,
       /* wg-output-process-ops */
       wg_output_process_ops (vm, node, ptd->crypto_ops, sync_bufs, nexts,
 			     drop_next);
+
+      int n_left_from_sync_bufs = n_sync;
+      while (n_left_from_sync_bufs > 0)
+	{
+	  n_left_from_sync_bufs--;
+	  vlib_buffer_t *b0 = sync_bufs[n_left_from_sync_bufs];
+	  u8 ip_ver_out = (*((u8 *) vlib_buffer_get_current (b0)) >> 4);
+
+	  /* IPv6 UDP checksum is mandatory */
+	  if (ip_ver_out == 6)
+	    {
+	      ip6_header_t *ip6_0 =
+		(ip6_header_t *) ((u8 *) vlib_buffer_get_current (b0));
+	      int bogus = 0;
+	      udp_header_t *udp0 = ip6_next_header (ip6_0);
+	      udp0->checksum =
+		ip6_tcp_udp_icmp_compute_checksum (vm, b0, ip6_0, &bogus);
+	      ASSERT (bogus == 0);
+	    }
+	}
+
       vlib_buffer_enqueue_to_next (vm, node, sync_bi, nexts, n_sync);
     }
   if (n_async)
@@ -658,7 +679,6 @@ wg_output_tun_post (vlib_main_t *vm, vlib_node_runtime_t *node,
 	      tr->next_index = next[3];
 	    }
 	}
-
       b += 4;
       next += 4;
       n_left -= 4;
diff --git a/src/plugins/wireguard/wireguard_send.c b/src/plugins/wireguard/wireguard_send.c
index 5366cd91c..7857eb7ed 100644
--- a/src/plugins/wireguard/wireguard_send.c
+++ b/src/plugins/wireguard/wireguard_send.c
@@ -41,7 +41,8 @@ ip46_enqueue_packet (vlib_main_t *vm, u32 bi0, int is_ip4)
 }
 
 static void
-wg_buffer_prepend_rewrite (vlib_buffer_t *b0, const wg_peer_t *peer, u8 is_ip4)
+wg_buffer_prepend_rewrite (vlib_main_t *vm, vlib_buffer_t *b0,
+			   const wg_peer_t *peer, u8 is_ip4)
 {
   if (is_ip4)
     {
@@ -72,6 +73,13 @@ wg_buffer_prepend_rewrite (vlib_buffer_t *b0, const wg_peer_t *peer, u8 is_ip4)
 
       hdr6->ip6.payload_length = hdr6->udp.length =
 	clib_host_to_net_u16 (b0->current_length - sizeof (ip6_header_t));
+
+      /* IPv6 UDP checksum is mandatory */
+      int bogus = 0;
+      ip6_header_t *ip6_0 = &(hdr6->ip6);
+      hdr6->udp.checksum =
+	ip6_tcp_udp_icmp_compute_checksum (vm, b0, ip6_0, &bogus);
+      ASSERT (bogus == 0);
     }
 }
 
@@ -93,7 +101,7 @@ wg_create_buffer (vlib_main_t *vm, const wg_peer_t *peer, const u8 *packet,
 
   b0->current_length = packet_len;
 
-  wg_buffer_prepend_rewrite (b0, peer, is_ip4);
+  wg_buffer_prepend_rewrite (vm, b0, peer, is_ip4);
 
   return true;
 }
-- 
2.37.3

